/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-10-17 04:19:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.day04;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ajax_005fresult_005fxml_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1728526346637L));
    _jspx_dependants.put("jar:file:/D:/springmvcstudy/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/spring_mvc01/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Ajax - XML</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	table{width: 600px; border-collapse: collapse;}\r\n");
      out.write("	table, th, td{border: 1px solid blue; text-align: center;}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<button id=\"btn1\">테스트(html)</button>\r\n");
      out.write("    <button id=\"btn2\">테스트(xml)</button>\r\n");
      out.write("    <button id=\"btn3\">테스트(날씨 xml)</button>\r\n");
      out.write("    <button id=\"btn4\">테스트(공공데이터 포털 xml)</button>\r\n");
      out.write("    \r\n");
      out.write("    <hr>\r\n");
      out.write("    <div id=\"result\"></div>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    	$(\"#btn1\").click(function() {\r\n");
      out.write("			$(\"#result\").empty();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/test01\",		// 서버 주소\r\n");
      out.write("				method: \"post\",			// 전달 방식\r\n");
      out.write("				// data : \"\",			// 서버에 갈 때 가져갈 데이터(파라미터)\r\n");
      out.write("				dataType: \"text\",		// 가져오는 결과 데이터 타입\r\n");
      out.write("				// async : true(비동기 = [기본값]) 또는 false(동기)\r\n");
      out.write("				success : function(msg) {\r\n");
      out.write("					$(\"#result\").append(msg);\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"읽기 실패!\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("    	\r\n");
      out.write("    	$(\"#btn2\").click(function() {\r\n");
      out.write("			$(\"#result\").empty();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/test02\",		// 서버 주소\r\n");
      out.write("				method: \"post\",			// 전달 방식\r\n");
      out.write("				dataType: \"xml\",		// 가져오는 결과 데이터 타입\r\n");
      out.write("				success : function(sb) {\r\n");
      out.write("					let table = \"<table>\";\r\n");
      out.write("					table += \"<thead><tr><th>회사</th><th>이름</th><th>개수</th></tr></thead>\";\r\n");
      out.write("					table += \"<tbody>\";\r\n");
      out.write("					$(sb).find(\"product\").each(function(){\r\n");
      out.write("						let company = $(this).text();\r\n");
      out.write("						let name = $(this).attr(\"name\");\r\n");
      out.write("						let count = $(this).attr(\"count\");\r\n");
      out.write("						table += \"<tr><td>\"+company+\"</td><td>\"+name+\"</td><td>\"+count+\"</td></tr>\";\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					table += \"</tbody>\";\r\n");
      out.write("					table += \"</table>\";\r\n");
      out.write("					\r\n");
      out.write("					$(\"#result\").append(table);\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"읽기 실패!\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("    	\r\n");
      out.write("    	$(\"#btn3\").click(function() {\r\n");
      out.write("			$(\"#result\").empty();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/test03\",		// 서버 주소\r\n");
      out.write("				method: \"post\",			// 전달 방식\r\n");
      out.write("				dataType: \"xml\",		// 가져오는 결과 데이터 타입\r\n");
      out.write("				success : function(sb) {\r\n");
      out.write("					let year = $(sb).find(\"weather\").attr(\"year\");\r\n");
      out.write("					let month = $(sb).find(\"weather\").attr(\"month\");\r\n");
      out.write("					let day = $(sb).find(\"weather\").attr(\"day\");\r\n");
      out.write("					let hour = $(sb).find(\"weather\").attr(\"hour\");\r\n");
      out.write("					let date = \"<h3>\"+year+\".\"+month+\".\"+day+\" \"+hour+\"시</h3>\";\r\n");
      out.write("					\r\n");
      out.write("					let table = \"<table>\";\r\n");
      out.write("					table += \"<thead><tr><th>지역</th><th>아이콘</th><th>날씨</th><th>기온</th><th>강수량</th></tr></thead>\";\r\n");
      out.write("					table += \"<tbody>\";\r\n");
      out.write("					$(sb).find(\"local\").each(function(){\r\n");
      out.write("						let region = $(this).text();\r\n");
      out.write("						let icon = $(this).attr(\"icon\");\r\n");
      out.write("						let desc = $(this).attr(\"desc\");\r\n");
      out.write("						let ta = $(this).attr(\"ta\");\r\n");
      out.write("						let rn_hr1 = $(this).attr(\"rn_hr1\");\r\n");
      out.write("						\r\n");
      out.write("						table += \"<tr><td>\"+region+\"</td><td><img src='https://www.kma.go.kr/images/icon/NW/NB\"+icon+\".png'></td><td>\"\r\n");
      out.write("								+desc+\"</td><td>\"+ta+\"</td><td>\"+rn_hr1+\"</td></tr>\";\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					table += \"</tbody>\";\r\n");
      out.write("					table += \"</table>\";\r\n");
      out.write("					$(\"#result\").append(date);\r\n");
      out.write("					$(\"#result\").append(table);\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"읽기 실패!\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("    	\r\n");
      out.write("    	$(\"#btn4\").click(function() {\r\n");
      out.write("			$(\"#result\").empty();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"/test04\",		// 서버 주소\r\n");
      out.write("				method: \"post\",			// 전달 방식\r\n");
      out.write("				dataType: \"text\",		// 가져오는 결과 데이터 타입\r\n");
      out.write("				success : function(msg) {\r\n");
      out.write("					let table = \"<div><table>\"\r\n");
      out.write("					table += \"<thead><tr><th>지역</th><th>초미세먼지 [ug/m3]</th><th>미세먼지 [ug/m3]</th><th>오존 [ppm]</th><th>이산화질소 [ppm]</th><th>일산화탄소 [ppm]</th></tr></thead>\";\r\n");
      out.write("					table += \"<tbody>\";\r\n");
      out.write("					\r\n");
      out.write("					$(msg).find(\"item\").each(function(){\r\n");
      out.write("						table += \"<tr>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"sidoName\").text() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"pm25Value\").text() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"pm10Value\").text() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"o3Value\").text() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"no2Value\").text() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + $(this).find(\"coValue\").text() + \"</td>\";\r\n");
      out.write("						table += \"</tr>\";\r\n");
      out.write("					});\r\n");
      out.write("						\r\n");
      out.write("					table += \"</tbody>\";\r\n");
      out.write("					table += \"</table></div>\";\r\n");
      out.write("					$(\"#result\").append(table);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"읽기 실패!\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
